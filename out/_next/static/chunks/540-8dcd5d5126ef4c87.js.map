{"version":3,"file":"static/chunks/540-8dcd5d5126ef4c87.js","mappings":"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","sources":["webpack://_N_E/./components/MovieList/MoviesGridContainer/index.js","webpack://_N_E/./components/UI/Tooltip/index.js","webpack://_N_E/./components/MovieList/MovieListItem/RatingInfo/index.js","webpack://_N_E/./components/MovieList/MovieListItem/index.js","webpack://_N_E/./components/MovieList/index.js","webpack://_N_E/./components/UI/ReactStars/index.js","webpack://_N_E/./components/Rating/RatingValue/index.js","webpack://_N_E/./components/Rating/index.js"],"sourcesContent":["\r\n\r\nconst MoviesGridContainer = ({\r\n  theme,\r\n  children\r\n}) => (\r\n  <>\r\n    <div className='grid-container'>{children}</div>\r\n    <style jsx>{`\r\n      .grid-container {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(10rem, 25rem));\r\n        grid-gap: 4rem 2rem;\r\n        justify-content: space-evenly;\r\n        align-content: space-between;\r\n        align-items: start;\r\n        margin: 4rem 0;\r\n      }\r\n    \r\n      @media ${theme.mediaQueries.small} {\r\n        .grid-container {\r\n          grid-template-columns: repeat(auto-fit, minmax(10rem, 23rem));\r\n          justify-content: space-around;\r\n          grid-gap: 4rem 1.5rem;\r\n        }\r\n      }\r\n    \r\n      @media ${theme.mediaQueries.smaller} {\r\n        .grid-container {\r\n          grid-template-columns: repeat(auto-fit, minmax(10rem, 18rem));\r\n          grid-gap: 4rem 1rem;\r\n        }\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default MoviesGridContainer;\r\n","\r\nimport clsx from 'clsx';\r\n\r\nimport withTheme from 'utils/hocs/withTheme';\r\n\r\n// MEMO: could follow the MUI practices https://material-ui.com/components/tooltips/\r\nconst Tooltip = ({\r\n  theme,\r\n  className,\r\n  children,\r\n  ...rest\r\n}) => (\r\n  <>\r\n    <span\r\n      className={clsx('tooltip', className)}\r\n      {...rest}>\r\n      {children}\r\n    </span>\r\n    <style jsx>{`\r\n      .tooltip {\r\n        visibility: hidden;\r\n        width: 120px;\r\n        font-weight: ${theme.typography.fontWeightMedium};\r\n        font-size: 1.25rem;\r\n        background-color: var(--palette-primary-light);\r\n        color: var(--palette-primary-contrast-text);\r\n        text-align: center;\r\n        border-radius: ${theme.shape.borderRadius}px;\r\n        padding: 1rem;\r\n        z-index: ${theme.zIndex.tooltip};\r\n        transition: visibility ${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut};\r\n      }\r\n      \r\n      .tooltip::after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 100%;\r\n        left: 50%;\r\n        margin-left: -5px;\r\n        border-width: 5px;\r\n        border-style: solid;\r\n        border-color: var(--palette-primary-light) transparent transparent transparent;\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default withTheme(Tooltip);\r\n","\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport Rating from 'components/Rating';\r\nimport Tooltip from 'components/UI/Tooltip';\r\n\r\nconst RatingInfo = ({\r\n  className,\r\n  voteAverage,\r\n  tooltip\r\n}) => (\r\n  <>\r\n    <div className={clsx('rating-info', className)}>\r\n      <Rating voteAverage={voteAverage} />\r\n      <Tooltip className='tooltip-position tooltip-show'>{tooltip}</Tooltip>\r\n    </div>\r\n    <style jsx>{`\r\n      .rating-info {\r\n        display: flex;\r\n        position: relative;\r\n        align-items: center;\r\n        margin-bottom: 0.5rem;\r\n      }\r\n\r\n      :global(.tooltip-position) {\r\n        position: absolute;\r\n        bottom: 100%;\r\n        left: 50%;\r\n        transform: translate(-50%, 0);\r\n      }\r\n\r\n      .rating-info:hover :global(.tooltip-show) {\r\n        visibility: visible;\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default RatingInfo;\r\n","\r\nimport LazyLoad from 'react-lazyload';\r\n\r\nimport PosterLink from 'components/PosterLink';\r\nimport Scenery from 'components/Scenery';\r\nimport DetailsPanelWrapper from 'components/DetailsPanelWrapper';\r\nimport PosterTitle from 'components/PosterTitle';\r\nimport RatingInfo from './RatingInfo';\r\nimport LINKS from 'utils/constants/links';\r\nimport CLASS_NAMES from 'utils/constants/class-names';\r\nimport { W342H513 } from 'config/image-sizes';\r\nimport QUERY_PARAMS from 'utils/constants/query-params';\r\n\r\nconst POSTER_LINK_CLASS_NAME = 'poster-link';\r\nconst POSTER_TITLE_CLASS_NAME = 'poster-title-color';\r\nconst RATING_INFO_CLASS_NAME = 'rating-info-color';\r\n\r\nconst MovieListItem = ({\r\n  theme,\r\n  movie,\r\n  baseUrl,\r\n  fetchpriority\r\n}) => (\r\n  <>\r\n    <LazyLoad\r\n      height={200}\r\n      offset={1400}>\r\n      <PosterLink\r\n        className={POSTER_LINK_CLASS_NAME}\r\n        href={{\r\n          pathname: LINKS.MOVIE.HREF,\r\n          query: {\r\n            [QUERY_PARAMS.ID]: movie.id,\r\n            [QUERY_PARAMS.PAGE]: 1\r\n          }\r\n        }}>\r\n        <Scenery\r\n          width={W342H513.WIDTH}\r\n          height={W342H513.HEIGHT}\r\n          fetchpriority={fetchpriority}\r\n          src={`${baseUrl}w${W342H513.WIDTH}${movie.poster_path}`} />\r\n        <DetailsPanelWrapper theme={theme}>\r\n          <PosterTitle\r\n            theme={theme}\r\n            className={POSTER_TITLE_CLASS_NAME}>\r\n            {movie.title}\r\n          </PosterTitle>\r\n          <RatingInfo\r\n            className={RATING_INFO_CLASS_NAME}\r\n            voteAverage={movie.vote_average}\r\n            tooltip={`${movie.vote_average} average rating on ${movie.vote_count} votes`} />\r\n        </DetailsPanelWrapper>\r\n      </PosterLink>\r\n    </LazyLoad>\r\n    <style jsx>{`\r\n      :global(.${POSTER_LINK_CLASS_NAME}:hover .${CLASS_NAMES.IMAGE_LOADING_PLACEHOLDER}) {\r\n        box-shadow: ${theme.shadows[0]};\r\n        border-radius: 0;\r\n      }\r\n\r\n      :global(.${POSTER_LINK_CLASS_NAME}:hover .${POSTER_TITLE_CLASS_NAME}) {\r\n        color: var(--palette-text-primary);\r\n      }\r\n\r\n      :global(.${POSTER_LINK_CLASS_NAME}:hover .${RATING_INFO_CLASS_NAME} .${CLASS_NAMES.RATING}) {\r\n        color: var(--palette-warning-light);\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default MovieListItem;\r\n","\r\n\r\nimport MoviesGridContainer from './MoviesGridContainer';\r\nimport MovieListItem from './MovieListItem';\r\nimport Pagination from 'components/Pagination';\r\nimport withTheme from 'utils/hocs/withTheme';\r\n\r\nconst MovieList = ({\r\n  theme,\r\n  movies,\r\n  baseUrl\r\n}) => (\r\n  <>\r\n    <MoviesGridContainer theme={theme}>\r\n      {movies.results.map((movie, index) => (\r\n        <MovieListItem\r\n          theme={theme}\r\n          key={movie.id}\r\n          movie={movie}\r\n          fetchpriority={index === 0? \"high\" : \"low\"}\r\n          baseUrl={baseUrl} />\r\n      ))}\r\n    </MoviesGridContainer>\r\n    <Pagination\r\n      page={movies.page}\r\n      totalPages={movies.total_pages} />\r\n  </>\r\n);\r\n\r\nexport default withTheme(MovieList);\r\n","\r\n/**\r\n * MEMO: inspired by https://github.com/n49/react-stars.\r\n * TODO: should be improved (code-standard & code-size) based on a functional component.\r\n * TODO: more delicate fractional star instead of just a half star\r\n */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst parentStyles = {\r\n  overflow: 'hidden',\r\n  position: 'relative'\r\n};\r\n\r\nconst defaultStyles = {\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n  cursor: 'pointer',\r\n  display: 'block',\r\n  float: 'left'\r\n};\r\n\r\nconst getHalfStarStyles = (color, uniqueness) => {\r\n  return `\r\n    .react-stars-${uniqueness}:before {\r\n      position: absolute;\r\n      overflow: hidden;\r\n      display: block;\r\n      z-index: 1;\r\n      top: 0; left: 0;\r\n      width: 50%;\r\n      content: attr(data-forhalf);\r\n      color: ${color};\r\n  }`\r\n};\r\n\r\nclass ReactStars extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    // set defaults\r\n    props = Object.assign({}, props);\r\n\r\n    this.state = {\r\n      uniqueness: (Math.random() + '').replace('.', ''),\r\n      value: props.value || 0,\r\n      stars: [],\r\n      halfStar: {\r\n        at: Math.floor(props.value),\r\n        hidden: props.half && props.value % 1 < 0.5\r\n      }\r\n    };\r\n\r\n    this.state.config = {\r\n      count: props.count,\r\n      size: props.size,\r\n      char: props.char,\r\n      // default color of inactive star\r\n      color1: props.color1,\r\n      // color of an active star\r\n      color2: props.color2,\r\n      half: props.half,\r\n      edit: props.edit\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      stars: this.getStars(this.state.value)\r\n    });\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    this.setState({\r\n      stars: this.getStars(props.value),\r\n      value: props.value,\r\n      halfStar: {\r\n        at: Math.floor(props.value),\r\n        hidden: this.state.config.half && props.value % 1 < 0.5\r\n      },\r\n      config: Object.assign({}, this.state.config, {\r\n        count: props.count,\r\n        size: props.size,\r\n        char: props.char,\r\n        color1: props.color1,\r\n        color2: props.color2,\r\n        half: props.half,\r\n        edit: props.edit\r\n      })\r\n    });\r\n  }\r\n\r\n  isDecimal(value) {\r\n    return value % 1 !== 0;\r\n  }\r\n\r\n  getRate() {\r\n    let stars;\r\n    if (this.state.config.half) {\r\n      stars = Math.floor(this.state.value);\r\n    } else {\r\n      stars = Math.round(this.state.value);\r\n    }\r\n    return stars;\r\n  }\r\n\r\n  getStars(activeCount) {\r\n    if (typeof activeCount === 'undefined') {\r\n      activeCount = this.getRate();\r\n    }\r\n    let stars = [];\r\n    for (let i = 0; i < this.state.config.count; i++) {\r\n      stars.push({\r\n        active: i <= activeCount - 1\r\n      });\r\n    }\r\n    return stars;\r\n  }\r\n\r\n  mouseOver(event) {\r\n    let { config, halfStar } = this.state;\r\n    if (!config.edit) return;\r\n    let index = Number(event.target.getAttribute('data-index'));\r\n    if (config.half) {\r\n      const isAtHalf = this.moreThanHalf(event, config.size);\r\n      halfStar.hidden = isAtHalf;\r\n      if (isAtHalf) index = index + 1;\r\n      halfStar.at = index;\r\n    } else {\r\n      index = index + 1;\r\n    }\r\n    this.setState({\r\n      stars: this.getStars(index)\r\n    });\r\n  }\r\n\r\n  moreThanHalf(event, size) {\r\n    let { target } = event;\r\n    var mouseAt = event.clientX - target.getBoundingClientRect().left;\r\n    mouseAt = Math.round(Math.abs(mouseAt));\r\n    return mouseAt > size / 2;\r\n  }\r\n\r\n  mouseLeave() {\r\n    const { value, halfStar, config } = this.state;\r\n    if (!config.edit) return;\r\n    if (config.half) {\r\n      halfStar.hidden = !this.isDecimal(value);\r\n      halfStar.at = Math.floor(this.state.value);\r\n    }\r\n    this.setState({\r\n      stars: this.getStars()\r\n    });\r\n  }\r\n\r\n  clicked(event) {\r\n    const { config, halfStar } = this.state;\r\n    if (!config.edit) return;\r\n    let index = Number(event.target.getAttribute('data-index'));\r\n    let value;\r\n    if (config.half) {\r\n      const isAtHalf = this.moreThanHalf(event, config.size);\r\n      halfStar.hidden = isAtHalf;\r\n      if (isAtHalf) index = index + 1;\r\n      value = isAtHalf ? index : index + .5;\r\n      halfStar.at = index;\r\n    } else {\r\n      value = index = index + 1;\r\n    }\r\n    this.setState({\r\n      value: value,\r\n      stars: this.getStars(index)\r\n    });\r\n    this.props.onChange(value);\r\n  }\r\n\r\n  renderHalfStarStyleElement() {\r\n    const { config, uniqueness } = this.state;\r\n    return (\r\n      <style dangerouslySetInnerHTML={{\r\n        __html: getHalfStarStyles(config.color2, uniqueness)\r\n      }}></style>\r\n    )\r\n  }\r\n\r\n  renderStars() {\r\n    const { halfStar, stars, uniqueness, config } = this.state;\r\n    const { color1, color2, size, char, half, edit } = config;\r\n    return stars.map((star, i) => {\r\n      let starClass = '';\r\n      if (half && !halfStar.hidden && halfStar.at === i) {\r\n        starClass = `react-stars-${uniqueness}`;\r\n      }\r\n      const style = Object.assign({}, defaultStyles, {\r\n        color: star.active ? color2 : color1,\r\n        // TODO: always pointer\r\n        // cursor: edit ? 'pointer' : 'default',\r\n        cursor: edit ? 'pointer' : 'pointer',\r\n        fontSize: `${size}px`\r\n      });\r\n      return (\r\n        <span\r\n          className={starClass}\r\n          style={style}\r\n          key={i}\r\n          data-index={i}\r\n          data-forhalf={char}\r\n          onMouseOver={this.mouseOver.bind(this)}\r\n          onMouseMove={this.mouseOver.bind(this)}\r\n          onMouseLeave={this.mouseLeave.bind(this)}\r\n          onClick={this.clicked.bind(this)}>\r\n          {char}\r\n        </span>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      className\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={className} style={parentStyles}>\r\n        {this.state.config.half ?\r\n          this.renderHalfStarStyleElement() : ''}\r\n        {this.renderStars()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactStars.propTypes = {\r\n  className: PropTypes.string,\r\n  edit: PropTypes.bool,\r\n  half: PropTypes.bool,\r\n  value: PropTypes.number,\r\n  count: PropTypes.number,\r\n  char: PropTypes.string,\r\n  size: PropTypes.number,\r\n  color1: PropTypes.string,\r\n  color2: PropTypes.string\r\n};\r\n\r\nReactStars.defaultProps = {\r\n  edit: true,\r\n  half: true,\r\n  value: 0,\r\n  count: 5,\r\n  char: '★',\r\n  size: 15,\r\n  color1: 'gray',\r\n  color2: '#ffd700',\r\n\r\n  onChange: () => {}\r\n};\r\n\r\nexport default ReactStars;\r\n","\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport withTheme from 'utils/hocs/withTheme';\r\n\r\nconst RatingValue = ({\r\n  theme,\r\n  className,\r\n  value\r\n}) => (\r\n  <>\r\n    <p className={clsx('rating-value', className)}>\r\n      {value}\r\n    </p>\r\n    <style jsx>{`\r\n      .rating-value {\r\n        font-size: 1.5rem;\r\n        font-weight: ${theme.typography.fontWeightBold};\r\n        line-height: 0;\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default withTheme(RatingValue);\r\n","\r\n\r\nimport ReactStars from 'components/UI/ReactStars';\r\nimport RatingValue from './RatingValue';\r\nimport CLASS_NAMES from 'utils/constants/class-names';\r\n\r\nconst RATING_VALUE_CLASS_NAME = 'rating-value-side-margin';\r\n\r\nconst Rating = ({\r\n  voteAverage,\r\n  withValue\r\n}) => (\r\n  <>\r\n    <div className={CLASS_NAMES.RATING}>\r\n      <ReactStars\r\n        edit={false}\r\n        size={24}\r\n        color2='var(--palette-warning-main)'\r\n        value={voteAverage / 2.0} />\r\n      {withValue && (\r\n        <RatingValue\r\n          className={RATING_VALUE_CLASS_NAME}\r\n          value={voteAverage} />\r\n      )}\r\n    </div>\r\n    <style jsx>{`\r\n      .${CLASS_NAMES.RATING} {\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n      :global(.${RATING_VALUE_CLASS_NAME}) {\r\n        margin: 0 8px;\r\n        color: var(--palette-warning-main);\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default Rating;\r\n"],"names":["theme","children","div","mediaQueries","small","smaller","withTheme","className","rest","span","typography","fontWeightMedium","shape","borderRadius","zIndex","tooltip","transitions","duration","shorter","easing","easeInOut","clsx","voteAverage","Rating","Tooltip","POSTER_LINK_CLASS_NAME","POSTER_TITLE_CLASS_NAME","RATING_INFO_CLASS_NAME","movie","baseUrl","fetchpriority","LazyLoad","height","offset","PosterLink","href","pathname","LINKS","query","QUERY_PARAMS","id","Scenery","width","W342H513","src","poster_path","DetailsPanelWrapper","PosterTitle","title","RatingInfo","vote_average","vote_count","CLASS_NAMES","shadows","movies","MoviesGridContainer","results","map","index","MovieListItem","Pagination","page","totalPages","total_pages","defaultStyles","position","overflow","display","float","getHalfStarStyles","props","assign","uniqueness","Math","random","stars","halfStar","floor","value","hidden","state","config","count","color1","color2","edit","Object","size","half","getRate","mouseOver","isAtHalf","moreThanHalf","event","mouseAt","at","setState","getStars","this","onChange","renderHalfStarStyleElement","starClass","style","color","star","cursor","fontSize","char","onMouseOver","onMouseMove","onMouseLeave","onClick","clicked","renderStars","PropTypes","number","ReactStars","p","fontWeightBold","RATING_VALUE_CLASS_NAME","withValue","RatingValue"],"sourceRoot":""}