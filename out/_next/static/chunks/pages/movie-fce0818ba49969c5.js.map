{"version":3,"file":"static/chunks/pages/movie-fce0818ba49969c5.js","mappings":"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","sources":["webpack://_N_E/./public/assets/svgs/icons/home.svg","webpack://_N_E/?25e5","webpack://_N_E/./components/RecommendedMovieList/index.js","webpack://_N_E/./components/MovieSummary/MovieArtwork/index.js","webpack://_N_E/./components/MovieSummary/index.js","webpack://_N_E/./actions/getCredits.js","webpack://_N_E/./actions/getMovie.js","webpack://_N_E/./actions/getRecommendedMovies.js","webpack://_N_E/./actions/clearRecommendedMovies.js","webpack://_N_E/./actions/clearMovie.js","webpack://_N_E/./pages/movie/index.js","webpack://_N_E/./parts/Artwork/IntroImage/index.js","webpack://_N_E/./parts/Artwork/index.js","webpack://_N_E/./parts/NotFound/TitleSection/index.js","webpack://_N_E/./parts/NotFound/NotFoundImage/index.js","webpack://_N_E/./parts/NotFound/index.js","webpack://_N_E/./parts/SummaryWrapper/index.js","webpack://_N_E/./utils/helpers/checkEmptyObject.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M280.37 148.26L96 300.11V464a16 16 0 0016 16l112.06-.29a16 16 0 0015.92-16V368a16 16 0 0116-16h64a16 16 0 0116 16v95.64a16 16 0 0016 16.05L464 480a16 16 0 0016-16V300L295.67 148.26a12.19 12.19 0 00-15.3 0zM571.6 251.47L488 182.56V44.05a12 12 0 00-12-12h-56a12 12 0 00-12 12v72.61L318.47 43a48 48 0 00-61 0L4.34 251.47a12 12 0 00-1.6 16.9l25.5 31A12 12 0 0045.15 301l235.22-193.74a12.19 12.19 0 0115.3 0L530.9 301a12 12 0 0016.9-1.6l25.5-31a12 12 0 00-1.7-16.93z\"\n});\n\nfunction SvgHome(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 576 512\"\n  }, props), _ref);\n}\n\nexport default SvgHome;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/movie\",\n      function () {\n        return require(\"private-next-pages/movie/index.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/movie\"])\n      });\n    }\n  ","\r\nimport { Element } from 'react-scroll';\r\n\r\nimport Header from 'parts/Header';\r\nimport NotFound from 'parts/NotFound';\r\nimport PaddingWrapper from 'parts/PaddingWrapper';\r\nimport MovieList from 'components/MovieList';\r\nimport Loader from 'components/UI/Loader';\r\nimport { SCROLL_TO_ELEMENT } from 'utils/constants';\r\n\r\nconst RecommendedMovieList = ({\r\n  recommendedMovies,\r\n  baseUrl\r\n}) => (\r\n  <PaddingWrapper>\r\n    <Element name={SCROLL_TO_ELEMENT}>\r\n      <Header\r\n        title='Recommended'\r\n        subtitle='movies' />\r\n    </Element>\r\n    {recommendedMovies.loading ? (\r\n      <Loader centerRow />\r\n    ) : (\r\n      recommendedMovies.total_results === 0 ? (\r\n        <NotFound\r\n          title='Sorry!'\r\n          subtitle='There are no recommended movies...' />\r\n      ) : (\r\n        <MovieList\r\n          movies={recommendedMovies}\r\n          baseUrl={baseUrl} />\r\n      )\r\n    )}\r\n  </PaddingWrapper>\r\n);\r\n\r\nexport default RecommendedMovieList;\r\n","\r\nimport Artwork from 'parts/Artwork';\r\n\r\nconst MovieArtwork = props => (\r\n  <Artwork {...props} />\r\n);\r\n\r\nexport default MovieArtwork;\r\n","\r\n\r\nimport SummaryWrapper from 'parts/SummaryWrapper';\r\nimport MovieArtwork from './MovieArtwork';\r\nimport { W780H1170 } from 'config/image-sizes';\r\nimport dynamic from 'next/dynamic';\r\nconst MovieInfo = dynamic(() => import('./MovieInfo'));\r\n\r\nconst MovieSummary = ({\r\n  baseUrl,\r\n  movie\r\n}) => (\r\n  <SummaryWrapper>\r\n    <MovieArtwork\r\n      width={W780H1170.WIDTH}\r\n      height={W780H1170.HEIGHT}\r\n      src={`${baseUrl}w${W780H1170.WIDTH}${movie.poster_path}`} />\r\n    <MovieInfo\r\n      baseUrl={baseUrl}\r\n      movie={movie} />\r\n  </SummaryWrapper>\r\n);\r\n\r\nexport default MovieSummary;\r\n","import Router from 'next/router';\r\n\r\nimport * as TYPES from './types';\r\nimport tmdbAPI from 'services/tmdbAPI';\r\nimport LINKS from 'utils/constants/links';\r\nimport { TMDB_API_VERSION } from 'config/tmdb';\r\n\r\nconst getCredits = movieId => async dispatch => {\r\n  try {\r\n    const response = await tmdbAPI.get(`/${TMDB_API_VERSION}/movie/${movieId}/credits`);\r\n    dispatch({\r\n      type: TYPES.FETCH_CREDITS,\r\n      payload: response.data.cast\r\n    });\r\n  } catch (error) {\r\n    console.log('[getCredits] error => ', error);\r\n    dispatch({type: TYPES.INSERT_ERROR, payload: error.response});\r\n    Router.push(LINKS.ERROR.HREF);\r\n  }\r\n};\r\n\r\nexport default getCredits;\r\n","\r\nimport Router from 'next/router';\r\n\r\nimport * as TYPES from './types';\r\nimport tmdbAPI from 'services/tmdbAPI';\r\nimport getCredits from './getCredits';\r\nimport LINKS from 'utils/constants/links';\r\nimport { TMDB_API_VERSION } from 'config/tmdb';\r\n\r\nconst getMovie = id => async dispatch => {\r\n  try {\r\n    dispatch({type: TYPES.SET_MOVIE_LOADING});\r\n    const [response] = await Promise.all([\r\n      tmdbAPI.get(`/${TMDB_API_VERSION}/movie/${id}`, {params: {append_to_response: 'videos'}}),\r\n      dispatch(getCredits(id))\r\n    ]);\r\n    await dispatch({\r\n      type: TYPES.FETCH_MOVIE,\r\n      payload: response.data\r\n    });\r\n    dispatch({type: TYPES.UNSET_MOVIE_LOADING});\r\n  } catch (error) {\r\n    console.log('[getMovie] error => ', error);\r\n    dispatch({type: TYPES.INSERT_ERROR, payload: error.response});\r\n    Router.push(LINKS.ERROR.HREF);\r\n  }\r\n};\r\n\r\nexport default getMovie;\r\n","\r\nimport Router from 'next/router';\r\n\r\nimport * as TYPES from './types';\r\nimport tmdbAPI from 'services/tmdbAPI';\r\nimport LINKS from 'utils/constants/links';\r\nimport { TMDB_API_VERSION } from 'config/tmdb';\r\n\r\n// Get recommended movies associated with the movie\r\nconst getRecommendedMovies = (id, page) => async dispatch => {\r\n  try {\r\n    dispatch({type: TYPES.SET_RECOMMENDED_MOVIES_LOADING});\r\n    const response = await tmdbAPI.get(`/${TMDB_API_VERSION}/movie/${id}/recommendations`, {\r\n      params: {page}\r\n    });\r\n    await dispatch({\r\n      type: TYPES.FETCH_RECOMMENDED_MOVIES,\r\n      payload: response.data\r\n    });\r\n    dispatch({type: TYPES.UNSET_RECOMMENDED_MOVIES_LOADING});\r\n  } catch (error) {\r\n    console.log('[getRecommendedMovies] error => ', error);\r\n    dispatch({type: TYPES.INSERT_ERROR, payload: error.response});\r\n    Router.push(LINKS.ERROR.HREF);\r\n  }\r\n};\r\n\r\nexport default getRecommendedMovies;\r\n","import * as TYPES from './types';\r\n\r\n// Set loading to true for next render\r\nconst clearRecommendedMovies = () => ({type: TYPES.SET_RECOMMENDED_MOVIES_LOADING});\r\n\r\nexport default clearRecommendedMovies;\r\n","import * as TYPES from './types';\r\n\r\n// Set loading to true for next render\r\nconst clearMovie = () => ({type: TYPES.SET_MOVIE_LOADING});\r\n\r\nexport default clearMovie;\r\n","\r\n\r\nimport { useEffect } from 'react';\r\nimport Router, { useRouter } from 'next/router';\r\nimport Head from 'next/head';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\n\r\nimport PageWrapper from 'parts/PageWrapper';\r\nimport Loader from 'components/UI/Loader';\r\nimport RecommendedMovieList from 'components/RecommendedMovieList';\r\nimport MovieSummary from 'components/MovieSummary';\r\nimport getMovie from 'actions/getMovie';\r\nimport getRecommendedMovies from 'actions/getRecommendedMovies';\r\nimport clearRecommendedMovies from 'actions/clearRecommendedMovies';\r\nimport clearMovie from 'actions/clearMovie';\r\nimport QUERY_PARAMS from 'utils/constants/query-params';\r\nimport LINKS from 'utils/constants/links';\r\nimport checkEmptyObject from 'utils/helpers/checkEmptyObject';\r\n\r\nconst Movie = () => {\r\n  const dispatch = useDispatch();\r\n  const general = useSelector(state => state.general);\r\n  const movie = useSelector(state => state.movie);\r\n  const recommendedMovies = useSelector(state => state.recommendedMovies);\r\n  const { query } = useRouter();\r\n\r\n  const movieId = query[QUERY_PARAMS.ID];\r\n  const page = Number(query[QUERY_PARAMS.PAGE]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearMovie());\r\n      dispatch(clearRecommendedMovies());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (checkEmptyObject(query)) return;\r\n\r\n    const initialMovieId = Router.query[QUERY_PARAMS.ID];\r\n    const initialPage = Router.query[QUERY_PARAMS.PAGE];\r\n\r\n    if (!initialPage) {\r\n      const newMovieId = initialMovieId;\r\n      const newPage = 1;\r\n      console.log('[Movie useEffect] query parameter update: newMovieId, newPage => ', newMovieId, newPage);\r\n      Router.replace({\r\n        pathname: LINKS.MOVIE.HREF,\r\n        query: {\r\n          [QUERY_PARAMS.ID]: newMovieId,\r\n          [QUERY_PARAMS.PAGE]: newPage\r\n        }\r\n      });\r\n    }\r\n  }, [dispatch, query]);\r\n\r\n  useEffect(() => {\r\n    if (!movieId) return;\r\n\r\n    scroll.scrollToTop({smooth: true, delay: 500});\r\n    \r\n    dispatch(getMovie(movieId));\r\n  }, [movieId, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!movieId || !page) return;\r\n    dispatch(getRecommendedMovies(movieId, page));\r\n  }, [movieId, page, dispatch]);\r\n\r\n  if (movie.loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  const { secure_base_url: baseUrl } = general.base.images;\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <Head>\r\n        <title>{`${movie.title} - Movie Library`}</title>\r\n      </Head>\r\n      <MovieSummary\r\n        baseUrl={baseUrl}\r\n        movie={movie} />\r\n      <RecommendedMovieList\r\n        baseUrl={baseUrl}\r\n        recommendedMovies={recommendedMovies} />\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport Image from 'components/Image';\r\nimport ImageLoadingPlaceholder from 'components/ImageLoadingPlaceholder';\r\nimport { NOTHING_PLACEHOLDER_IMAGE_PATH } from 'utils/constants/image-paths';\r\n\r\nconst IntroImage = ({\r\n  className,\r\n  ...rest\r\n}) => (\r\n  <>\r\n    <Image\r\n      gradientOverlayEnabled\r\n      className={clsx('intro-image', className)}\r\n      loadingUI={<ImageLoadingPlaceholder />}\r\n      placeholderPath={NOTHING_PLACEHOLDER_IMAGE_PATH}\r\n      {...rest} />\r\n    <style jsx>{`\r\n      :global(.intro-image) {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default IntroImage;\r\n","\r\n\r\nimport IntroImage from './IntroImage';\r\nimport withTheme from 'utils/hocs/withTheme';\r\nimport AspectRatioBox from 'components/UI/AspectRatioBox';\r\n\r\nconst Artwork = ({\r\n  theme,\r\n  width,\r\n  height,\r\n  src\r\n}) => (\r\n  <>\r\n    <div className='artwork'>\r\n      <AspectRatioBox aspectRatio={width / height}>\r\n        <IntroImage\r\n          src={src}\r\n          width={width}\r\n          height={height} />\r\n      </AspectRatioBox>\r\n    </div>\r\n    <style jsx>{`\r\n      .artwork {\r\n        padding: 4rem;\r\n      }\r\n\r\n      @media ${theme.mediaQueries.largest} {\r\n        .artwork {\r\n          padding: 3rem;\r\n        }\r\n      }\r\n\r\n      @media ${theme.mediaQueries.large} {\r\n        .artwork {\r\n          padding: 2rem;\r\n        }\r\n      }\r\n\r\n      @media ${theme.mediaQueries.smaller} {\r\n        .artwork {\r\n          padding: 0;\r\n          margin-top: -102px;\r\n        }\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default withTheme(Artwork);\r\n","\r\n\r\nconst TitleSection = ({\r\n  theme,\r\n  title,\r\n  subtitle\r\n}) => (\r\n  <>\r\n    <div className='title-section'>\r\n      <h1 className='title'>{title}</h1>\r\n      <h2 className='subtitle'>{subtitle}</h2>\r\n    </div>\r\n    <style jsx>{`\r\n      .title-section {\r\n        text-align: center;\r\n        margin-bottom: 6rem;\r\n      }\r\n\r\n      .title-section .title {\r\n        color: var(--palette-text-primary);\r\n        font-weight: ${theme.typography.fontWeightLight};\r\n        font-size: 3.75rem;\r\n      }\r\n\r\n      .title-section .subtitle {\r\n        color: var(--palette-text-secondary);\r\n        font-weight: ${theme.typography.fontWeightBold};\r\n        font-size: 2.125rem;\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default TitleSection;\r\n","\r\nconst NotFoundImage = props => (\r\n  <>\r\n    <img\r\n      {...props}\r\n      width='423'\r\n      height='423'\r\n      className='not-found-image' />\r\n    <style jsx>{`\r\n      .not-found-image {\r\n        max-width: 96%;\r\n        height: 40vh;\r\n        margin-bottom: 6rem;\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default NotFoundImage;\r\n","\r\n\r\nimport PageWrapper from 'parts/PageWrapper';\r\nimport TitleSection from './TitleSection';\r\nimport NotFoundImage from './NotFoundImage';\r\nimport LinkButton from 'components/LinkButton';\r\nimport LINKS from 'utils/constants/links';\r\nimport withTheme from 'utils/hocs/withTheme';\r\nimport HomeIcon from 'public/assets/svgs/icons/home.svg';\r\nimport QUERY_PARAMS from 'utils/constants/query-params';\r\nimport STATIC_MOVIE_CATEGORIES from 'utils/constants/static-movie-categories';\r\n\r\nconst NotFound = ({\r\n  theme,\r\n  title,\r\n  subtitle\r\n}) => (\r\n  <>\r\n    <PageWrapper className='not-found'>\r\n      <TitleSection\r\n        theme={theme}\r\n        title={title}\r\n        subtitle={subtitle} />\r\n      <NotFoundImage\r\n        src='/assets/svgs/empty.svg'\r\n        alt='Not found!' />\r\n      <LinkButton\r\n        href={{\r\n          pathname: LINKS.HOME.HREF,\r\n          query: {\r\n            [QUERY_PARAMS.CATEGORY]: STATIC_MOVIE_CATEGORIES[0].name,\r\n            [QUERY_PARAMS.PAGE]: 1\r\n          }\r\n        }}\r\n        buttonProps={{\r\n          contained: true,\r\n          title: 'Home',\r\n          startIcon: (\r\n            <HomeIcon\r\n              fill='currentColor'\r\n              width='1.125em' />\r\n          )\r\n        }} />\r\n    </PageWrapper>\r\n    <style jsx>{`\r\n      :global(.not-found) {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n      }\r\n      @media ${theme.mediaQueries.medium} {\r\n        :global(.not-found) {\r\n          width: 65%;\r\n        }\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default withTheme(NotFound);\r\n","\r\n\r\nimport LazyLoad from 'react-lazyload';\r\n\r\nimport withTheme from 'utils/hocs/withTheme';\r\n\r\nconst SummaryWrapper = ({\r\n  theme,\r\n  children\r\n}) => (\r\n  <>\r\n    {/* TODO: double check if we really need LazyLoad */}\r\n    <LazyLoad height={500}>\r\n      <div className='summary-wrapper'>\r\n        {children}\r\n      </div>\r\n    </LazyLoad>\r\n    <style jsx>{`\r\n      .summary-wrapper {\r\n        display: grid;\r\n        grid-template-columns: 40% 60%;\r\n        max-width: 120rem;\r\n        margin: 0 auto;\r\n        margin-bottom: 7rem;\r\n      }\r\n\r\n      @media ${theme.mediaQueries.largest} {\r\n        .summary-wrapper {\r\n          max-width: 105rem;\r\n        }\r\n      }\r\n\r\n      @media ${theme.mediaQueries.larger} {\r\n        .summary-wrapper {\r\n          max-width: 110rem;\r\n          margin-bottom: 6rem;\r\n        }\r\n      }\r\n\r\n      @media ${theme.mediaQueries.large} {\r\n        .summary-wrapper {\r\n          max-width: 110rem;\r\n          margin-bottom: 5rem;\r\n        }\r\n      }\r\n\r\n      @media ${theme.mediaQueries.medium} {\r\n        .summary-wrapper {\r\n          display: block;\r\n          grid-template-columns: unset;\r\n          margin-bottom: 5rem;\r\n        }\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default withTheme(SummaryWrapper);\r\n","\r\nconst checkEmptyObject = targetObject => {\r\n  return Object.keys(targetObject).length === 0 && targetObject.constructor === Object;\r\n};\r\n\r\nexport default checkEmptyObject;\r\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","d","props","viewBox","window","__NEXT_P","push","recommendedMovies","baseUrl","PaddingWrapper","Element","name","SCROLL_TO_ELEMENT","Header","title","subtitle","loading","Loader","centerRow","total_results","NotFound","MovieList","movies","Artwork","MovieInfo","dynamic","movie","SummaryWrapper","MovieArtwork","width","W780H1170","height","src","poster_path","movieId","dispatch","response","tmdbAPI","TMDB_API_VERSION","type","TYPES","payload","data","cast","console","log","error","Router","LINKS","id","Promise","all","params","append_to_response","getCredits","page","useDispatch","general","useSelector","state","useRouter","query","QUERY_PARAMS","Number","useEffect","clearMovie","clearRecommendedMovies","checkEmptyObject","initialMovieId","newMovieId","pathname","scroll","smooth","delay","getMovie","getRecommendedMovies","secure_base_url","base","images","PageWrapper","Head","MovieSummary","RecommendedMovieList","className","rest","Image","gradientOverlayEnabled","clsx","loadingUI","ImageLoadingPlaceholder","placeholderPath","NOTHING_PLACEHOLDER_IMAGE_PATH","withTheme","theme","div","mediaQueries","largest","large","smaller","AspectRatioBox","aspectRatio","IntroImage","typography","fontWeightLight","fontWeightBold","h1","h2","img","TitleSection","NotFoundImage","alt","LinkButton","href","STATIC_MOVIE_CATEGORIES","buttonProps","contained","startIcon","HomeIcon","fill","medium","children","LazyLoad","larger","targetObject","keys","constructor"],"sourceRoot":""}