{"version":3,"file":"static/chunks/pages/list/add-or-edit-7b1d03e02e72278a.js","mappings":"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","sources":["webpack://_N_E/./public/assets/svgs/icons/home.svg","webpack://_N_E/?3706","webpack://_N_E/./components/UI/FormControl/index.js","webpack://_N_E/./components/UI/Label/index.js","webpack://_N_E/./components/UI/Navbar/index.js","webpack://_N_E/./components/UI/TextInput/index.js","webpack://_N_E/./components/UI/TheSelectSearch/index.js","webpack://_N_E/./containers/ListNavigation/index.js","webpack://_N_E/./parts/PublicOrPrivateSelectSearch/index.js","webpack://_N_E/./components/UI/TextArea/index.js","webpack://_N_E/./utils/hooks/useForm.js","webpack://_N_E/./utils/constants/input-names.js","webpack://_N_E/./pages/list/add-or-edit/index.js","webpack://_N_E/./parts/NotFound/TitleSection/index.js","webpack://_N_E/./parts/NotFound/NotFoundImage/index.js","webpack://_N_E/./parts/NotFound/index.js","webpack://_N_E/./utils/constants/select-search.js","webpack://_N_E/./utils/hocs/withAuth/index.js","webpack://_N_E/./components/UI/TheSelectSearch/default-style.module.css","webpack://_N_E/./parts/PublicOrPrivateSelectSearch/style.module.css"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M280.37 148.26L96 300.11V464a16 16 0 0016 16l112.06-.29a16 16 0 0015.92-16V368a16 16 0 0116-16h64a16 16 0 0116 16v95.64a16 16 0 0016 16.05L464 480a16 16 0 0016-16V300L295.67 148.26a12.19 12.19 0 00-15.3 0zM571.6 251.47L488 182.56V44.05a12 12 0 00-12-12h-56a12 12 0 00-12 12v72.61L318.47 43a48 48 0 00-61 0L4.34 251.47a12 12 0 00-1.6 16.9l25.5 31A12 12 0 0045.15 301l235.22-193.74a12.19 12.19 0 0115.3 0L530.9 301a12 12 0 0016.9-1.6l25.5-31a12 12 0 00-1.7-16.93z\"\n});\n\nfunction SvgHome(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 576 512\"\n  }, props), _ref);\n}\n\nexport default SvgHome;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/list/add-or-edit\",\n      function () {\n        return require(\"private-next-pages/list/add-or-edit/index.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/list/add-or-edit\"])\n      });\n    }\n  ","\r\n\r\nimport clsx from 'clsx';\r\n\r\nconst CLASS_NAME = 'form-control';\r\n\r\nconst FormControl = ({\r\n  className,\r\n  ...rest\r\n}) => (\r\n  <>\r\n    <div\r\n      className={clsx(CLASS_NAME, className)}\r\n      {...rest} />\r\n    <style jsx>{`\r\n      .${CLASS_NAME} {\r\n        margin: 8px 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n      }\r\n      .${CLASS_NAME} > :global(label + *) {\r\n        margin-top: 4px;\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default FormControl;\r\n","\r\n\r\nimport clsx from 'clsx';\r\n\r\nconst CLASS_NAME = 'label';\r\n\r\nconst Label = ({\r\n  className,\r\n  ...rest\r\n}) => (\r\n  <>\r\n    <label\r\n      className={clsx(CLASS_NAME, className)}\r\n      {...rest} />\r\n    <style jsx>{`\r\n      .${CLASS_NAME} {\r\n        font-size: 1.5rem;\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default Label;\r\n","\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport withTheme from 'utils/hocs/withTheme';\r\n\r\nconst SELECTED_CLASS_NAME = 'selected';\r\nconst DISABLED_CLASS_NAME = 'disabled';\r\nconst INVISIBLE_CLASS_NAME = 'invisible';\r\n\r\nconst NavbarItem = withTheme(({\r\n  theme,\r\n  className,\r\n  disabled,\r\n  selected,\r\n  invisible,\r\n  ...rest\r\n}) => (\r\n  <>\r\n    <li\r\n      className={\r\n        clsx(\r\n          {[SELECTED_CLASS_NAME]: selected},\r\n          {[DISABLED_CLASS_NAME]: disabled},\r\n          {[INVISIBLE_CLASS_NAME]: invisible},\r\n          className\r\n        )\r\n      }\r\n      {...rest} />\r\n    <style jsx>{`\r\n      li {\r\n        flex: 1;\r\n        color: var(--palette-text-secondary);\r\n        display: grid;\r\n        place-items: center;\r\n      }\r\n      \r\n      li > :global(a) {\r\n        font-size: 1.5rem;\r\n        color: var(--palette-text-primary);\r\n        padding: 6px 12px;\r\n        text-align: center;\r\n        text-decoration: none;\r\n        transition: color ${theme.transitions.duration.short}ms ${theme.transitions.easing.easeInOut} 0ms, padding-top ${theme.transitions.duration.short}ms ${theme.transitions.easing.easeInOut} 0ms;\r\n      }\r\n      \r\n      li.${SELECTED_CLASS_NAME} :global(a) {\r\n        color: var(--palette-primary-main);\r\n      }\r\n\r\n      li.${DISABLED_CLASS_NAME} :global(a) {\r\n        color: var(--palette-text-disabled);\r\n        pointer-events: none;\r\n      }\r\n\r\n      li.${INVISIBLE_CLASS_NAME} {\r\n        display: none;\r\n      }\r\n    `}</style>\r\n  </>\r\n));\r\n\r\nconst Navbar = ({\r\n  theme,\r\n  ...rest\r\n}) => (\r\n  <>\r\n    <ul {...rest} />\r\n    <style jsx>{`\r\n      ul {\r\n        list-style-type: none;\r\n        margin: 16px 0;\r\n        padding: 0;\r\n        display: flex;\r\n        min-height: 46px;\r\n        justify-content: center;\r\n        overflow: hidden;\r\n        border: 1px solid var(--palette-divider);\r\n        background-color: var(--palette-background-paper);\r\n        transition: background-color var(--duration) var(--timing);\r\n      }\r\n\r\n      @media ${theme.mediaQueries.small} {\r\n        ul {\r\n          flex-direction: column;\r\n        }\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport {\r\n  NavbarItem\r\n};\r\n\r\nexport default withTheme(Navbar);\r\n","\r\nimport Label from 'components/UI/Label';\r\nimport FormControl from 'components/UI/FormControl';\r\n\r\nconst TextInput = ({\r\n  id = 'input',\r\n  label,\r\n  ...rest\r\n}) => (\r\n  <>\r\n    <FormControl>\r\n      {label && <Label htmlFor={id}>{label}</Label>}\r\n      <input\r\n        id={id}\r\n        type='text'\r\n        {...rest} />\r\n    </FormControl>\r\n    <style jsx>{`\r\n      input[type=text] {\r\n        width: 100%;\r\n        padding: 12px 16px;\r\n        color: var(--palette-text-primary);\r\n        font-size: 1.5rem;\r\n        box-sizing: border-box;\r\n        border: 1px solid var(--palette-divider);\r\n        background-color: var(--palette-background-paper);\r\n        transition: color var(--duration) var(--timing), background-color var(--duration) var(--timing);\r\n        outline: none;\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default TextInput;\r\n","\r\n\r\nimport SelectSearch from 'react-select-search/dist/cjs';\r\nimport clsx from 'clsx';\r\n\r\nimport Label from 'components/UI/Label';\r\nimport FormControl from 'components/UI/FormControl';\r\nimport defaultClasses from 'components/UI/TheSelectSearch/default-style.module.css';\r\n\r\nconst TheSelectSearch = React.forwardRef(({\r\n  id,\r\n  name,\r\n  label,\r\n  classes,\r\n  ...rest\r\n}, ref) => (\r\n  <>\r\n    <FormControl>\r\n      {label && <Label htmlFor={id}>{label}</Label>}\r\n      <SelectSearch\r\n        ref={ref}\r\n        className={key => clsx(defaultClasses?.[key], classes?.[key])}\r\n        renderValue={valueProps => (\r\n          <input\r\n            id={id}\r\n            name={name}\r\n            className={clsx(defaultClasses?.['input'], classes?.['input'])}\r\n            {...valueProps} />\r\n        )}\r\n        {...rest} />\r\n    </FormControl>\r\n  </>\r\n));\r\n\r\nexport default TheSelectSearch;\r\n","\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport Navbar, { NavbarItem } from 'components/UI/Navbar';\r\nimport LINKS from 'utils/constants/links';\r\nimport QUERY_PARAMS from 'utils/constants/query-params';\r\n\r\nconst ListNavigation = ({ listId }) => {\r\n  const { pathname } = useRouter();\r\n\r\n  const updateListLinks = [\r\n    {\r\n      title: 'Edit List',\r\n      href: {\r\n        pathname: LINKS.ADD_OR_EDIT_LIST.HREF,\r\n        query: {[QUERY_PARAMS.ID]: listId}\r\n      },\r\n      disabled: false\r\n    },\r\n    {\r\n      title: 'View List',\r\n      href: {\r\n        pathname: LINKS.LIST.HREF,\r\n        query: {\r\n          [QUERY_PARAMS.ID]: listId,\r\n          [QUERY_PARAMS.PAGE]: 1\r\n        }\r\n      },\r\n      disabled: false\r\n    },\r\n    {\r\n      title: 'Add/Remove Items',\r\n      href: {\r\n        pathname: LINKS.ADD_OR_REMOVE_ITEMS_AT_LIST.HREF,\r\n        query: {\r\n          [QUERY_PARAMS.LIST_ID]: listId,\r\n          [QUERY_PARAMS.PAGE]: 1\r\n        }\r\n      },\r\n      disabled: false\r\n    },\r\n    {\r\n      title: 'Choose Image',\r\n      href: {\r\n        pathname: LINKS.CHOOSE_LIST_IMAGE.HREF,\r\n        query: {[QUERY_PARAMS.LIST_ID]: listId, [QUERY_PARAMS.PAGE]: 1}\r\n      },\r\n      disabled: false\r\n    },\r\n    {\r\n      title: 'Delete List',\r\n      href: {\r\n        pathname: LINKS.REMOVE_LIST.HREF,\r\n        query: {[QUERY_PARAMS.ID]: listId}\r\n      },\r\n      disabled: false\r\n    }\r\n  ];\r\n\r\n  const createListLinks = [\r\n    {\r\n      title: 'Step1: List Details',\r\n      href: {\r\n        pathname: LINKS.ADD_OR_EDIT_LIST.HREF\r\n      },\r\n      disabled: false\r\n    },\r\n    {\r\n      title: 'Step2: Add Items',\r\n      href: {\r\n        pathname: LINKS.ADD_OR_REMOVE_ITEMS_AT_LIST.HREF\r\n      },\r\n      disabled: true\r\n    },\r\n    {\r\n      title: 'Step3: Choose Image',\r\n      href: {\r\n        pathname: LINKS.CHOOSE_LIST_IMAGE.HREF\r\n      },\r\n      disabled: true\r\n    }\r\n  ];\r\n\r\n  let listLinks = listId ? updateListLinks : createListLinks;\r\n\r\n  return (\r\n    <Navbar>\r\n      {listLinks.map(listLink => (\r\n        <NavbarItem\r\n          key={listLink.title}\r\n          disabled={listLink.disabled}\r\n          selected={pathname === listLink.href.pathname}>\r\n          <Link\r\n            href={listLink.href}>\r\n            <a>{listLink.title}</a>\r\n          </Link>\r\n        </NavbarItem>  \r\n      ))}\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default ListNavigation;\r\n","\r\n\r\nimport TheSelectSearch from 'components/UI/TheSelectSearch';\r\nimport classes from './style.module.css';\r\n\r\nconst PublicOrPrivateSelectSearch = props => (\r\n  <TheSelectSearch\r\n    classes={classes}\r\n    {...props} />\r\n);\r\n\r\nexport default PublicOrPrivateSelectSearch;\r\n","\r\n\r\nimport Label from 'components/UI/Label';\r\nimport FormControl from 'components/UI/FormControl';\r\n\r\nconst TextArea = ({\r\n  id = 'text-area',\r\n  label,\r\n  ...rest\r\n}) => (\r\n  <FormControl>\r\n    {label && <Label htmlFor={id}>{label}</Label>}\r\n    <textarea\r\n      id={id}\r\n      {...rest} />\r\n    <style jsx>{`\r\n      textarea {\r\n        width: 100%;\r\n        height: 150px;\r\n        padding: 12px 16px;\r\n        color: var(--palette-text-primary);\r\n        font-size: 1.5rem;\r\n        font-family: inherit;\r\n        box-sizing: border-box;\r\n        border: 1px solid var(--palette-divider);\r\n        transition: color var(--duration) var(--timing), background-color var(--duration) var(--timing);\r\n        outline: none;\r\n        background-color: var(--palette-background-paper);\r\n        resize: none;\r\n      }\r\n    `}</style>\r\n  </FormControl>\r\n);\r\n\r\nexport default TextArea;\r\n","\r\n\r\nimport { useState, useCallback } from 'react';\r\n\r\nconst useForm = ({ submitCallback, initialInputs = {} } = {}) => {\r\n  const [inputs, setInputs] = useState(initialInputs);\r\n\r\n  const onSubmitHandler = useCallback(event => {\r\n    event && event.preventDefault();\r\n    submitCallback && submitCallback();\r\n  }, [submitCallback]);\r\n\r\n  const inputChangeHandler = useCallback(event => {\r\n    event.persist && event.persist();\r\n    setInputs(prevInputs => {\r\n      const nextInputs = {\r\n        ...prevInputs,\r\n        [event.target.name]: event.target.type === 'checkbox'\r\n          ? event.target.checked\r\n          : event.target.type === 'number'\r\n            ? Number(event.target.value)\r\n            : event.target.value\r\n      };\r\n\r\n      return nextInputs;\r\n    });\r\n  }, []);\r\n\r\n  const updateInputsHandler = useCallback(newInputs => {\r\n    setInputs(newInputs);\r\n  }, []);\r\n\r\n  return {\r\n    onSubmitHandler,\r\n    inputChangeHandler,\r\n    inputs,\r\n    updateInputsHandler\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","\r\nconst INPUT_NAMES = {\r\n  LIST_NAME: 'list-name',\r\n  LIST_DESCRIPTION: 'list-description',\r\n  PUBLIC_OR_PRIVATE_LIST: 'public-or-private-list'\r\n};\r\n\r\nexport default INPUT_NAMES;\r\n","\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Router, { useRouter } from 'next/router';\r\nimport Head from 'next/head';\r\n\r\nimport Header from 'parts/Header';\r\nimport NotFound from 'parts/NotFound';\r\nimport PageWrapper from 'parts/PageWrapper';\r\nimport PaddingWrapper from 'parts/PaddingWrapper';\r\nimport PublicOrPrivateSelectSearch from 'parts/PublicOrPrivateSelectSearch';\r\nimport ListNavigation from 'containers/ListNavigation';\r\nimport TextInput from 'components/UI/TextInput';\r\nimport TextArea from 'components/UI/TextArea';\r\nimport Button from 'components/UI/Button';\r\nimport Loader from 'components/UI/Loader';\r\nimport withAuth from 'utils/hocs/withAuth';\r\nimport { YES_OR_NO_OPTIONS } from 'utils/constants/select-search';\r\nimport { TMDB_API_NEW_VERSION } from 'config/tmdb';\r\nimport useForm from 'utils/hooks/useForm';\r\nimport INPUT_NAMES from 'utils/constants/input-names';\r\nimport QUERY_PARAMS from 'utils/constants/query-params';\r\nimport LINKS from 'utils/constants/links';\r\nimport STATUSES from 'utils/constants/statuses';\r\nimport tmdbAPI from 'services/tmdbAPI';\r\n\r\n/**\r\n * TODO:\r\n * Should integrate authorization i.e. if this belongs to me.\r\n * Should handle `Invalid description` bug.\r\n * Should handle error state and show proper error message based on error state.\r\n * Could handle `sort_by` feature.\r\n */\r\n\r\nconst AddOrEdit = ({\r\n  accountId,\r\n  accessToken\r\n}) => {\r\n  const { query } = useRouter();\r\n  const listId = query[QUERY_PARAMS.ID];\r\n\r\n  const [editStatus, setEditStatus] = useState(STATUSES.IDLE);\r\n  const [submitStatus, setSubmitStatus] = useState(STATUSES.IDLE);\r\n  // TODO: could handle errors\r\n  const [editError, setEditError] = useState(null);\r\n  // const [addError, setAddError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // MEMO: check if there is no query parameter (list ID) which means ADD case\r\n    if (Router.router.asPath === LINKS.ADD_OR_EDIT_LIST.HREF) {\r\n      setEditStatus(STATUSES.RESOLVED);\r\n    }\r\n  }, []);\r\n\r\n  const submitCallback = async () => {\r\n    try {\r\n      setSubmitStatus(STATUSES.PENDING);\r\n      const body = {\r\n        name: inputs[INPUT_NAMES.LIST_NAME],\r\n        description: inputs[INPUT_NAMES.LIST_DESCRIPTION],\r\n        // TODO: vulnerable\r\n        public: inputs[INPUT_NAMES.PUBLIC_OR_PRIVATE_LIST] === YES_OR_NO_OPTIONS[0].value,\r\n        iso_639_1: 'en'\r\n      };\r\n      const config = {\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`\r\n        }\r\n      };\r\n\r\n      // MEMO: Edit/Add case\r\n      const response = listId\r\n        ? await tmdbAPI.put(`/${TMDB_API_NEW_VERSION}/list/${listId}`, body, config)\r\n        : await tmdbAPI.post(`/${TMDB_API_NEW_VERSION}/list`, body, config);\r\n\r\n      setSubmitStatus(STATUSES.RESOLVED);\r\n\r\n      // MEMO: Add case\r\n      if (!listId) {\r\n        const { id } = response.data;\r\n        Router.push({\r\n          query: {\r\n            [QUERY_PARAMS.ID]: id\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log('[AddOrEdit submitCallback] error => ', error);\r\n      setSubmitStatus(STATUSES.REJECTED);\r\n      // setAddError(error);\r\n    }\r\n  };\r\n\r\n  const {\r\n    inputs,\r\n    inputChangeHandler,\r\n    updateInputsHandler,\r\n    onSubmitHandler\r\n  } = useForm({\r\n    submitCallback,\r\n    initialInputs: {\r\n      [INPUT_NAMES.LIST_NAME]: '',\r\n      [INPUT_NAMES.LIST_DESCRIPTION]: '',\r\n      [INPUT_NAMES.PUBLIC_OR_PRIVATE_LIST]: YES_OR_NO_OPTIONS[0].value\r\n    }\r\n  });\r\n\r\n  const publicOrPrivateSelectHandler = newIsPublicList => {\r\n    inputChangeHandler({\r\n      target: {\r\n        name: INPUT_NAMES.PUBLIC_OR_PRIVATE_LIST,\r\n        value: newIsPublicList\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!listId) return;\r\n      if (!accessToken) return;\r\n      if (!accountId) return;\r\n\r\n      try {\r\n        setEditStatus(STATUSES.PENDING);\r\n        const config = {\r\n          headers: {\r\n            'Authorization': `Bearer ${accessToken}`\r\n          }\r\n        };\r\n        const response = await tmdbAPI.get(`/${TMDB_API_NEW_VERSION}/list/${listId}`, config);\r\n        const movies = response.data;\r\n        if (movies.created_by.id === accountId) {\r\n          updateInputsHandler({\r\n            [INPUT_NAMES.LIST_NAME]: movies.name,\r\n            [INPUT_NAMES.LIST_DESCRIPTION]: movies.description,\r\n            // TODO: vulnerable\r\n            [INPUT_NAMES.PUBLIC_OR_PRIVATE_LIST]: movies.public.toString()\r\n          });\r\n        } else {\r\n          throw new Error('You don\\'t seem to have access to this page.');\r\n        }\r\n      } catch (error) {\r\n        console.log('[Edit useEffect] error => ', error);\r\n        setEditStatus(STATUSES.REJECTED);\r\n        setEditError(error);\r\n      }\r\n    })();\r\n  }, [listId, updateInputsHandler, accessToken, accountId]);\r\n\r\n  const listName = inputs[INPUT_NAMES.LIST_NAME];\r\n\r\n  useEffect(() => {\r\n    if (!listName) return;\r\n\r\n    setEditStatus(STATUSES.RESOLVED);\r\n  }, [listName]);\r\n\r\n  if (editStatus === STATUSES.IDLE || editStatus === STATUSES.PENDING) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (editStatus === STATUSES.REJECTED) {\r\n    // TODO: should show proper error message based on error state\r\n    return (\r\n      <NotFound\r\n        title='Sorry!'\r\n        subtitle={editError?.message ?? 'We can\\'t find the page you\\'re looking for...'} />\r\n    );\r\n  }\r\n\r\n  if (editStatus === STATUSES.RESOLVED) {\r\n    return (\r\n      <>\r\n        <Head>\r\n          <title>{listId ? listName : 'Create New List: Step1'}</title>\r\n        </Head>\r\n        <PageWrapper>\r\n          <PaddingWrapper>\r\n            <Header\r\n              title={listId ? listName : 'Create New List: Step1'}\r\n              subtitle='Edit' />\r\n            <ListNavigation listId={listId} />\r\n            <form onSubmit={onSubmitHandler}>\r\n              <TextInput\r\n                id='name'\r\n                label='Name'\r\n                name={INPUT_NAMES.LIST_NAME}\r\n                value={inputs[INPUT_NAMES.LIST_NAME]}\r\n                onChange={inputChangeHandler}\r\n                required />\r\n              <TextArea\r\n                id='description'\r\n                label='Description'\r\n                name={INPUT_NAMES.LIST_DESCRIPTION}\r\n                value={inputs[INPUT_NAMES.LIST_DESCRIPTION]}\r\n                onChange={inputChangeHandler} />\r\n              <PublicOrPrivateSelectSearch\r\n                id='public-or-private-select'\r\n                label='Public List?'\r\n                name={INPUT_NAMES.PUBLIC_OR_PRIVATE_LIST}\r\n                value={inputs[INPUT_NAMES.PUBLIC_OR_PRIVATE_LIST]}\r\n                onChange={publicOrPrivateSelectHandler}\r\n                options={YES_OR_NO_OPTIONS} />\r\n              <Button\r\n                style={{\r\n                  width: 138,\r\n                  marginTop: 48\r\n                }}\r\n                loading={submitStatus === STATUSES.PENDING}\r\n                contained\r\n                type='submit'\r\n                title={listId ? 'Save' : 'Continue'} />\r\n            </form>\r\n          </PaddingWrapper>\r\n        </PageWrapper>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withAuth(AddOrEdit);\r\n","\r\n\r\nconst TitleSection = ({\r\n  theme,\r\n  title,\r\n  subtitle\r\n}) => (\r\n  <>\r\n    <div className='title-section'>\r\n      <h1 className='title'>{title}</h1>\r\n      <h2 className='subtitle'>{subtitle}</h2>\r\n    </div>\r\n    <style jsx>{`\r\n      .title-section {\r\n        text-align: center;\r\n        margin-bottom: 6rem;\r\n      }\r\n\r\n      .title-section .title {\r\n        color: var(--palette-text-primary);\r\n        font-weight: ${theme.typography.fontWeightLight};\r\n        font-size: 3.75rem;\r\n      }\r\n\r\n      .title-section .subtitle {\r\n        color: var(--palette-text-secondary);\r\n        font-weight: ${theme.typography.fontWeightBold};\r\n        font-size: 2.125rem;\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default TitleSection;\r\n","\r\nconst NotFoundImage = props => (\r\n  <>\r\n    <img\r\n      {...props}\r\n      width='423'\r\n      height='423'\r\n      className='not-found-image' />\r\n    <style jsx>{`\r\n      .not-found-image {\r\n        max-width: 96%;\r\n        height: 40vh;\r\n        margin-bottom: 6rem;\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default NotFoundImage;\r\n","\r\n\r\nimport PageWrapper from 'parts/PageWrapper';\r\nimport TitleSection from './TitleSection';\r\nimport NotFoundImage from './NotFoundImage';\r\nimport LinkButton from 'components/LinkButton';\r\nimport LINKS from 'utils/constants/links';\r\nimport withTheme from 'utils/hocs/withTheme';\r\nimport HomeIcon from 'public/assets/svgs/icons/home.svg';\r\nimport QUERY_PARAMS from 'utils/constants/query-params';\r\nimport STATIC_MOVIE_CATEGORIES from 'utils/constants/static-movie-categories';\r\n\r\nconst NotFound = ({\r\n  theme,\r\n  title,\r\n  subtitle\r\n}) => (\r\n  <>\r\n    <PageWrapper className='not-found'>\r\n      <TitleSection\r\n        theme={theme}\r\n        title={title}\r\n        subtitle={subtitle} />\r\n      <NotFoundImage\r\n        src='/assets/svgs/empty.svg'\r\n        alt='Not found!' />\r\n      <LinkButton\r\n        href={{\r\n          pathname: LINKS.HOME.HREF,\r\n          query: {\r\n            [QUERY_PARAMS.CATEGORY]: STATIC_MOVIE_CATEGORIES[0].name,\r\n            [QUERY_PARAMS.PAGE]: 1\r\n          }\r\n        }}\r\n        buttonProps={{\r\n          contained: true,\r\n          title: 'Home',\r\n          startIcon: (\r\n            <HomeIcon\r\n              fill='currentColor'\r\n              width='1.125em' />\r\n          )\r\n        }} />\r\n    </PageWrapper>\r\n    <style jsx>{`\r\n      :global(.not-found) {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n      }\r\n      @media ${theme.mediaQueries.medium} {\r\n        :global(.not-found) {\r\n          width: 65%;\r\n        }\r\n      }\r\n    `}</style>\r\n  </>\r\n);\r\n\r\nexport default withTheme(NotFound);\r\n","\r\n// TODO: vulnerable\r\nconst YES_OR_NO_OPTIONS = [\r\n  {value: 'true', name: 'Yes'},\r\n  {value: 'false', name: 'No'}\r\n];\r\n\r\nconst SORT_BY_OPTIONS = [\r\n  {value: 'popularity.desc', name: 'Popularity'},\r\n  {value: 'vote_average.desc', name: 'Votes Average'},\r\n  {value: 'original_title.asc', name: 'Original Title'},\r\n  {value: 'release_date.desc', name: 'Release Date'}\r\n];\r\n\r\nexport {\r\n  YES_OR_NO_OPTIONS,\r\n  SORT_BY_OPTIONS\r\n};\r\n","\r\n\r\nimport NotFound from 'parts/NotFound';\r\nimport { useAuth } from 'utils/hocs/AuthProvider';\r\n\r\n/**\r\n * TODO:\r\n * Should handle error state and show proper error message based on error state. \r\n */\r\n\r\nconst withAuth = WrappedComponent => {\r\n  return React.forwardRef(function AuthComponent(props, ref) {\r\n    const {\r\n      isAuthenticated,\r\n      // TODO: could handle errors\r\n      error,\r\n      ...rest\r\n    } = useAuth();\r\n\r\n    if (!isAuthenticated) {\r\n      return (\r\n        <NotFound\r\n          title=\"You don't have permission to access this page!\"\r\n          subtitle=\"You've tried to request a page that requires you to be logged in. Log in to your account.\" />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <WrappedComponent\r\n        ref={ref}\r\n        {...props}\r\n        isAuthenticated={isAuthenticated}\r\n        error={error}\r\n        {...rest} />\r\n    );\r\n  });\r\n};\r\n\r\nexport default withAuth;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"default-style_container__ZVDms\",\"value\":\"default-style_value__Oymd5\",\"input\":\"default-style_input__FvkTm\",\"select\":\"default-style_select__kFni6\",\"options\":\"default-style_options__agvf9\",\"row\":\"default-style_row__BqrmU\",\"option\":\"default-style_option__QLofT\",\"container--multiple\":\"default-style_container--multiple__g_wAb\",\"is-selected\":\"default-style_is-selected__al2oj\",\"is-highlighted\":\"default-style_is-highlighted__kkxyn\",\"group-header\":\"default-style_group-header__Zl5C_\",\"is-disabled\":\"default-style_is-disabled__xDksQ\",\"is-loading\":\"default-style_is-loading__bXiOt\",\"container--search\":\"default-style_container--search__0TDYG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__LHn0e\",\"select\":\"style_select__16uWq\"};"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","d","props","viewBox","window","__NEXT_P","push","CLASS_NAME","className","rest","div","clsx","label","SELECTED_CLASS_NAME","DISABLED_CLASS_NAME","INVISIBLE_CLASS_NAME","NavbarItem","withTheme","theme","disabled","selected","invisible","li","transitions","duration","short","easing","easeInOut","ul","mediaQueries","small","id","FormControl","Label","htmlFor","input","type","TheSelectSearch","forwardRef","ref","name","classes","SelectSearch","defaultClasses","renderValue","valueProps","listId","useRouter","pathname","updateListLinks","title","href","LINKS","query","QUERY_PARAMS","createListLinks","listLinks","Navbar","map","listLink","Link","a","textarea","submitCallback","initialInputs","useState","inputs","setInputs","onSubmitHandler","useCallback","event","preventDefault","inputChangeHandler","persist","prevInputs","checked","Number","value","updateInputsHandler","newInputs","LIST_NAME","LIST_DESCRIPTION","PUBLIC_OR_PRIVATE_LIST","editError","setEditError","useEffect","Router","router","ADD_OR_EDIT_LIST","HREF","response","INPUT_NAMES","description","public","config","headers","setSubmitStatus","newIsPublicList","accessToken","accountId","setEditStatus","STATUSES","tmdbAPI","console","editStatus","NotFound","ListNavigation","form","onSubmit","TextInput","onChange","YES_OR_NO_OPTIONS","style","width","subtitle","typography","fontWeightLight","fontWeightBold","h1","h2","img","height","PageWrapper","TitleSection","NotFoundImage","src","alt","LinkButton","STATIC_MOVIE_CATEGORIES","buttonProps","contained","startIcon","HomeIcon","fill","medium","SORT_BY_OPTIONS","useAuth","isAuthenticated","error","module","exports"],"sourceRoot":""}